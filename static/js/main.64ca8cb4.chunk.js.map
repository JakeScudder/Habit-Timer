{"version":3,"sources":["logo.svg","components/Timer.js","components/Calendar/Calendar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Timer","props","currentDay","state","dateContext","format","seconds","start","handleStart","bind","handleStop","handleReset","handleSave","console","log","this","slice","Math","floor","incrementer","setInterval","setState","toggle","startButton","document","querySelector","stopButton","style","display","clearInterval","resetButton","saveButton","currentDayElem","index","firstChild","innerHTML","className","setClass","id","getMinutes","getSeconds","type","onClick","Component","Calendar","weekdays","moment","weekdaysShort","months","year","month","daysInMonth","currentDate","get","firstDayOfMonth","startOf","today","showMonthPopup","showYearPopup","map","day","key","blanks","i","push","d","parseInt","spanName","data","totalDays","rows","cells","forEach","row","insertRow","length","trElements","App","handleState","Cookies","set","JSON","stringify","1","getJSON","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","src","logo","alt","width","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.64ca8cb4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from \"react\";\n\n//adapted/updated from SitePoint on Youtube\n\n//I need something that takes the className puts it in the App.js state, which updates the Calendar state as well.\n\nclass Timer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      seconds: 0,\n      start: false,\n    };\n    this.handleStart = this.handleStart.bind(this);\n    this.handleStop = this.handleStop.bind(this);\n    this.handleReset = this.handleReset.bind(this);\n    this.handleSave = this.handleSave.bind(this);\n  }\n\n  componentDidMount() {\n    console.log(\"mounted\");\n  }\n\n  getSeconds() {\n    return (\"0\" + (this.state.seconds % 60)).slice(-2);\n  }\n\n  getMinutes() {\n    return Math.floor(this.state.seconds / 60);\n  }\n\n  handleStart() {\n    this.incrementer = setInterval(() => {\n      this.setState({\n        seconds: this.state.seconds + 1,\n      });\n    }, 1000);\n    this.toggle();\n  }\n\n  toggle() {\n    let startButton = document.querySelector(\"#start\");\n    let stopButton = document.querySelector(\"#stop\");\n\n    if (!this.state.start) {\n      startButton.style.display = \"none\";\n      stopButton.style.display = \"\";\n      this.setState({\n        start: true,\n      });\n    } else {\n      startButton.style.display = \"\";\n      stopButton.style.display = \"none\";\n      this.setState({\n        start: false,\n      });\n    }\n  }\n\n  handleStop() {\n    clearInterval(this.incrementer);\n    let resetButton = document.querySelector(\"#reset\");\n    let saveButton = document.querySelector(\"#save\");\n    resetButton.style.display = \"\";\n    saveButton.style.display = \"\";\n    this.toggle();\n  }\n\n  handleReset() {\n    let resetButton = document.querySelector(\"#reset\");\n    let saveButton = document.querySelector(\"#save\");\n\n    resetButton.style.display = \"none\";\n    saveButton.style.display = \"none\";\n\n    this.setState({\n      seconds: 0,\n      start: false,\n    });\n  }\n\n  currentDay = () => {\n    return this.state.dateContext.format(\"D\");\n  };\n\n  handleSave() {\n    let currentDayElem = document.querySelector(\".day.current-day\");\n    let index = currentDayElem.firstChild.innerHTML;\n    console.log(currentDayElem);\n    // currentDayElem.removeChild(currentDayElem.firstChild);\n    this.handleReset();\n\n    if (this.state.seconds <= 300) {\n      currentDayElem.className = \"excellent\";\n      this.props.setClass();\n    } else if (this.state.seconds <= 420) {\n      currentDayElem.className = \"great\";\n      this.props.setClass(\"great\", index);\n    } else if (this.state.seconds <= 600) {\n      currentDayElem.className = \"good\";\n    } else {\n      currentDayElem.className = \"needs-work\";\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <h1 id=\"clock\">\n          {this.getMinutes()}:{this.getSeconds()}\n        </h1>\n        <button id=\"start\" type=\"button\" onClick={this.handleStart}>\n          <h2>Start</h2>\n        </button>\n        <button\n          id=\"stop\"\n          style={{ display: \"none\" }}\n          type=\"button\"\n          onClick={this.handleStop}\n        >\n          <h2>Stop</h2>\n        </button>\n        <button\n          id=\"reset\"\n          style={{ display: \"none\" }}\n          type=\"button\"\n          onClick={this.handleReset}\n        >\n          <h2>Reset</h2>\n        </button>\n        <button\n          id=\"save\"\n          style={{ display: \"none\" }}\n          type=\"button\"\n          onClick={this.handleSave}\n        >\n          <h2>Save Data</h2>\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Timer;\n","import React, { Component } from \"react\";\nimport moment from \"moment\";\nimport \"./calendar.css\";\n\nclass Calendar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dateContext: moment(),\n      today: moment(),\n      showMonthPopup: false,\n      showYearPopup: false,\n    };\n  }\n\n  weekdays = moment.weekdays(); //Sunday, Monday, etc.\n  weekdaysShort = moment.weekdaysShort(); // Sun, Mon, Tue, etc.\n  months = moment.months();\n\n  year = () => {\n    return this.state.dateContext.format(\"Y\");\n  };\n  month = () => {\n    return this.state.dateContext.format(\"MMMM\");\n  };\n  daysInMonth = () => {\n    return this.state.dateContext.daysInMonth();\n  };\n  currentDate = () => {\n    return this.state.dateContext.get(\"date\");\n  };\n  currentDay = () => {\n    return this.state.dateContext.format(\"D\");\n  };\n\n  firstDayOfMonth = () => {\n    let dateContext = this.state.dateContext;\n    let firstDay = moment(dateContext).startOf(\"month\").format(\"d\");\n    return firstDay;\n  };\n\n  render() {\n    // Map the weekday Sun, Mon, Tues\n    let weekdays = this.weekdaysShort.map((day) => {\n      return (\n        <td key={day} className=\"week-day\">\n          {day}\n        </td>\n      );\n    });\n\n    let blanks = [];\n    for (let i = 0; i < this.firstDayOfMonth(); i++) {\n      blanks.push(\n        <td key={i * 10} className=\"empty\">\n          {\"\"}\n        </td>\n      );\n    }\n\n    let daysInMonth = [];\n    for (let d = 1; d <= this.daysInMonth(); d++) {\n      let className =\n        d === parseInt(this.currentDay()) ? \"day current-day\" : `day ${d}`;\n      let spanName = d === parseInt(this.currentDay()) ? `day current-span` : d;\n\n      if (this.props.data[d] !== null) {\n        console.log(\"found cookie\");\n        daysInMonth.push(\n          <td key={d} className={this.props.data[d]}>\n            <span id={spanName}>{d}</span>\n          </td>\n        );\n      } else {\n        daysInMonth.push(\n          <td key={d} className={className}>\n            <span id={spanName}>{d}</span>\n          </td>\n        );\n      }\n    }\n\n    let totalDays = [...blanks, ...daysInMonth];\n    let rows = [];\n    let cells = [];\n\n    totalDays.forEach((row, i) => {\n      if (i % 7 !== 0) {\n        cells.push(row);\n      } else {\n        let insertRow = cells.slice();\n        rows.push(insertRow);\n        cells = [];\n        cells.push(row);\n      }\n      if (i === totalDays.length - 1) {\n        let insertRow = cells.slice();\n        rows.push(insertRow);\n      }\n    });\n\n    let trElements = rows.map((d, index) => {\n      return <tr key={index}>{d}</tr>;\n    });\n\n    return (\n      <div className=\"calendar-container\">\n        <table className=\"calendar\">\n          <thead>\n            <tr className=\"calendar-head\"></tr>\n          </thead>\n          <tbody>\n            <tr>{weekdays}</tr>\n            {trElements}\n          </tbody>\n        </table>\n        <div id=\"legend-container\">\n          <div className=\"legend-color one\">\n            <p id=\"excellent\"> &lt; 5 min </p>\n          </div>\n          <div className=\"legend-color two\">\n            <p id=\"great\"> &lt; 7 min </p>\n          </div>\n          <div className=\"legend-color three\">\n            <p id=\"good\"> &lt; 10 min </p>\n          </div>\n          <div className=\"legend-color four\">\n            <p id=\"needs-work\"> &gt; 10 min </p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Calendar;\n","import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\n// Dependencies\nimport Cookies from \"js-cookie\";\n\n// Components\n\nimport Timer from \"./components/Timer\";\nimport Calendar from \"./components/Calendar/Calendar\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      1: Cookies.getJSON(\"index1\") || null,\n      2: Cookies.getJSON(\"index2\") || null,\n      3: Cookies.getJSON(\"index3\") || null,\n      4: Cookies.getJSON(\"index4\") || null,\n      5: Cookies.getJSON(\"index5\") || null,\n      6: Cookies.getJSON(\"index6\") || null,\n      7: Cookies.getJSON(\"index7\") || null,\n      8: Cookies.getJSON(\"index8\") || null,\n      9: Cookies.getJSON(\"index9\") || null,\n      10: Cookies.getJSON(\"index10\") || null,\n      11: Cookies.getJSON(\"index11\") || null,\n      12: Cookies.getJSON(\"index12\") || null,\n      13: Cookies.getJSON(\"index13\") || null,\n      14: Cookies.getJSON(\"index14\") || null,\n      15: Cookies.getJSON(\"index15\") || null,\n      16: Cookies.getJSON(\"index16\") || null,\n      17: Cookies.getJSON(\"index17\") || null,\n      18: Cookies.getJSON(\"index18\") || null,\n      19: Cookies.getJSON(\"index19\") || null,\n      20: Cookies.getJSON(\"index20\") || null,\n      21: Cookies.getJSON(\"index21\") || null,\n      22: Cookies.getJSON(\"index22\") || null,\n      23: Cookies.getJSON(\"index23\") || null,\n      24: Cookies.getJSON(\"index24\") || null,\n      25: Cookies.getJSON(\"index25\") || null,\n      26: Cookies.getJSON(\"index26\") || null,\n      27: Cookies.getJSON(\"index27\") || null,\n      28: Cookies.getJSON(\"index28\") || null,\n      29: Cookies.getJSON(\"index29\") || null,\n      30: Cookies.getJSON(\"index30\") || null,\n      31: Cookies.getJSON(\"index31\") || null,\n    };\n  }\n\n  componentDidMount() {\n    console.log(Cookies.get(\"index15\"));\n  }\n\n  handleState = (className, index) => {\n    this.setState({\n      [index]: className,\n    });\n    Cookies.set(`index${index}`, JSON.stringify(className));\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <div id=\"calendar-container\">\n            <Calendar data={this.state} width=\"400px\" />\n          </div>\n          <h1 id=\"app-title\">\n            Shower <span className=\"span-color\">Timer</span>\n          </h1>\n          <div id=\"timer-container\">\n            <Timer setClass={this.handleState} />\n          </div>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}