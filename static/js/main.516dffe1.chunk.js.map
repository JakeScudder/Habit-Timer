{"version":3,"sources":["logo.svg","components/Timer.js","components/Calendar/Calendar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Timer","props","currentDay","state","dateContext","format","daysInMonth","moment","seconds","start","handleStart","bind","handleStop","handleReset","handleSave","console","log","this","slice","Math","floor","incrementer","setInterval","setState","toggle","startButton","document","querySelector","stopButton","style","display","clearInterval","resetButton","saveButton","totalDays","currentDayElem","index","firstChild","innerHTML","cookieExp","className","setClass","id","getMinutes","getSeconds","type","onClick","Component","Calendar","weekdays","weekdaysShort","months","year","month","currentDate","get","firstDayOfMonth","startOf","monthName","date","Date","whatMonth","today","showMonthPopup","showYearPopup","map","day","key","blanks","i","push","d","parseInt","spanName","data","rows","cells","forEach","row","insertRow","length","trElements","App","handleState","exp","Cookies","set","JSON","stringify","expires","1","getJSON","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","src","logo","alt","width","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"wGAAAA,EAAOC,QAAU,IAA0B,kC,gRCuJ5BC,E,kDAjJb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAyERC,WAAa,WACX,OAAO,EAAKC,MAAMC,YAAYC,OAAO,MA3EpB,EA8EnBC,YAAc,WAEZ,OADkBC,MACCD,eA9EnB,EAAKH,MAAQ,CACXK,QAAS,EACTC,OAAO,GAET,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,WAAa,EAAKA,WAAWD,KAAhB,gBAClB,EAAKE,YAAc,EAAKA,YAAYF,KAAjB,gBACnB,EAAKG,WAAa,EAAKA,WAAWH,KAAhB,gBATD,E,gEAajBI,QAAQC,IAAI,a,mCAIZ,OAAQ,IAAOC,KAAKd,MAAMK,QAAU,IAAKU,OAAO,K,mCAIhD,OAAOC,KAAKC,MAAMH,KAAKd,MAAMK,QAAU,M,oCAG1B,IAAD,OACZS,KAAKI,YAAcC,aAAY,WAC7B,EAAKC,SAAS,CACZf,QAAS,EAAKL,MAAMK,QAAU,MAE/B,KACHS,KAAKO,W,+BAIL,IAAIC,EAAcC,SAASC,cAAc,UACrCC,EAAaF,SAASC,cAAc,SAEnCV,KAAKd,MAAMM,OAOdgB,EAAYI,MAAMC,QAAU,GAC5BF,EAAWC,MAAMC,QAAU,OAC3Bb,KAAKM,SAAS,CACZd,OAAO,MATTgB,EAAYI,MAAMC,QAAU,OAC5BF,EAAWC,MAAMC,QAAU,GAC3Bb,KAAKM,SAAS,CACZd,OAAO,O,mCAYXsB,cAAcd,KAAKI,aACnB,IAAIW,EAAcN,SAASC,cAAc,UACrCM,EAAaP,SAASC,cAAc,SACxCK,EAAYH,MAAMC,QAAU,GAC5BG,EAAWJ,MAAMC,QAAU,GAC3Bb,KAAKO,W,oCAIL,IAAIQ,EAAcN,SAASC,cAAc,UACrCM,EAAaP,SAASC,cAAc,SAExCK,EAAYH,MAAMC,QAAU,OAC5BG,EAAWJ,MAAMC,QAAU,OAE3Bb,KAAKM,SAAS,CACZf,QAAS,EACTC,OAAO,M,mCAcT,IAAIyB,EAAYjB,KAAKX,cACrBS,QAAQC,IAAIkB,GACZ,IAAIC,EAAiBT,SAASC,cAAc,oBACxCS,EAAQD,EAAeE,WAAWC,UACtCrB,KAAKJ,cAEL,IAAI0B,EAAYL,EAAYE,EAExBnB,KAAKd,MAAMK,SAAW,KACxB2B,EAAeK,UAAY,YAC3BvB,KAAKhB,MAAMwC,SAAS,YAAaL,EAAOG,IAC/BtB,KAAKd,MAAMK,SAAW,KAC/B2B,EAAeK,UAAY,QAC3BvB,KAAKhB,MAAMwC,SAAS,QAASL,EAAOG,IAC3BtB,KAAKd,MAAMK,SAAW,KAC/B2B,EAAeK,UAAY,OAC3BvB,KAAKhB,MAAMwC,SAAS,OAAQL,EAAOG,KAEnCJ,EAAeK,UAAY,aAC3BvB,KAAKhB,MAAMwC,SAAS,aAAcL,EAAOG,M,+BAK3C,OACE,6BACE,wBAAIG,GAAG,SACJzB,KAAK0B,aADR,IACuB1B,KAAK2B,cAE5B,4BAAQF,GAAG,QAAQG,KAAK,SAASC,QAAS7B,KAAKP,aAC7C,sCAEF,4BACEgC,GAAG,OACHb,MAAO,CAAEC,QAAS,QAClBe,KAAK,SACLC,QAAS7B,KAAKL,YAEd,qCAEF,4BACE8B,GAAG,QACHb,MAAO,CAAEC,QAAS,QAClBe,KAAK,SACLC,QAAS7B,KAAKJ,aAEd,sCAEF,4BACE6B,GAAG,OACHb,MAAO,CAAEC,QAAS,QAClBe,KAAK,SACLC,QAAS7B,KAAKH,YAEd,+C,GA3IUiC,aCiKLC,G,wDAjKb,WAAY/C,GAAQ,IAAD,8BACjB,cAAMA,IAURgD,SAAW1C,IAAO0C,WAXC,EAYnBC,cAAgB3C,IAAO2C,gBAZJ,EAanBC,OAAS5C,IAAO4C,SAbG,EAenBC,KAAO,WACL,OAAO,EAAKjD,MAAMC,YAAYC,OAAO,MAhBpB,EAkBnBgD,MAAQ,WACN,OAAO,EAAKlD,MAAMC,YAAYC,OAAO,SAnBpB,EAqBnBC,YAAc,WACZ,OAAO,EAAKH,MAAMC,YAAYE,eAtBb,EAwBnBgD,YAAc,WACZ,OAAO,EAAKnD,MAAMC,YAAYmD,IAAI,SAzBjB,EA2BnBrD,WAAa,WACX,OAAO,EAAKC,MAAMC,YAAYC,OAAO,MA5BpB,EA+BnBmD,gBAAkB,WAChB,IAAIpD,EAAc,EAAKD,MAAMC,YAE7B,OADeG,IAAOH,GAAaqD,QAAQ,SAASpD,OAAO,MAjC1C,EAqCnBqD,UAAY,WACV,IAAIC,EAAO,IAAIC,KAkBXC,EAfS,CACX,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAdMtD,IAAOoD,GACDN,SAiBd,EAAK9B,SAAS,CACZmC,UAAWG,KAxDb,EAAK1D,MAAQ,CACXC,YAAaG,MACbuD,MAAOvD,MACPwD,gBAAgB,EAChBC,eAAe,EACfN,UAAW,IAPI,E,gEA+DjBzC,KAAKyC,c,+BAcL,IATA,IAAIT,EAAWhC,KAAKiC,cAAce,KAAI,SAACC,GACrC,OACE,wBAAIC,IAAKD,EAAK1B,UAAU,YACrB0B,MAKHE,EAAS,GACJC,EAAI,EAAGA,EAAIpD,KAAKuC,kBAAmBa,IAC1CD,EAAOE,KACL,wBAAIH,IAAS,GAAJE,EAAQ7B,UAAU,SACxB,KAMP,IADA,IAAIlC,EAAc,GACTiE,EAAI,EAAGA,GAAKtD,KAAKX,cAAeiE,IAAK,CAC5C,IAAI/B,EACF+B,IAAMC,SAASvD,KAAKf,cAAgB,kBAApC,cAA+DqE,GAC7DE,EAAWF,IAAMC,SAASvD,KAAKf,cAApB,mBAAyDqE,EAE7C,OAAvBtD,KAAKhB,MAAMyE,KAAKH,IAClBxD,QAAQC,IAAI,gBACZV,EAAYgE,KACV,wBAAIH,IAAKI,EAAG/B,UAAWvB,KAAKhB,MAAMyE,KAAKH,IACrC,0BAAM7B,GAAI+B,GAAWF,MAIzBjE,EAAYgE,KACV,wBAAIH,IAAKI,EAAG/B,UAAWA,GACrB,0BAAME,GAAI+B,GAAWF,KAM7B,IAAIrC,EAAS,UAAOkC,EAAW9D,GAC3BqE,EAAO,GACPC,EAAQ,GAEZ1C,EAAU2C,SAAQ,SAACC,EAAKT,GACtB,GAAIA,EAAI,IAAM,EACZO,EAAMN,KAAKQ,OACN,CACL,IAAIC,EAAYH,EAAM1D,QACtByD,EAAKL,KAAKS,IACVH,EAAQ,IACFN,KAAKQ,GAEb,GAAIT,IAAMnC,EAAU8C,OAAS,EAAG,CAC9B,IAAID,EAAYH,EAAM1D,QACtByD,EAAKL,KAAKS,OAId,IAAIE,EAAaN,EAAKV,KAAI,SAACM,EAAGnC,GAC5B,OAAO,wBAAI+B,IAAK/B,GAAQmC,MAG1B,OACE,yBAAK/B,UAAU,sBACb,wBAAIA,UAAU,cAAcvB,KAAKd,MAAMuD,WACvC,2BAAOlB,UAAU,YACf,+BACE,wBAAIA,UAAU,mBAEhB,+BACE,4BAAKS,GACJgC,IAGL,yBAAKvC,GAAG,oBACN,yBAAKF,UAAU,oBACb,uBAAGE,GAAG,aAAN,cAEF,yBAAKF,UAAU,oBACb,uBAAGE,GAAG,SAAN,cAEF,yBAAKF,UAAU,sBACb,uBAAGE,GAAG,QAAN,eAEF,yBAAKF,UAAU,qBACb,uBAAGE,GAAG,cAAN,qB,GA1JWK,cC8ERmC,E,kDArEb,WAAYjF,GAAQ,IAAD,8BACjB,cAAMA,IAwCRkF,YAAc,SAAC3C,EAAWJ,EAAOgD,GAC/BrE,QAAQC,IAAIoB,GACZ,EAAKb,SAAL,eACGa,EAAQI,IAEX6C,IAAQC,IAAR,eAAoBlD,GAASmD,KAAKC,UAAUhD,GAAY,CAAEiD,QAASL,KA5CnE,EAAKjF,MAAQ,CACXuF,EAAGL,IAAQM,QAAQ,WAAa,KAChCC,EAAGP,IAAQM,QAAQ,WAAa,KAChCE,EAAGR,IAAQM,QAAQ,WAAa,KAChCG,EAAGT,IAAQM,QAAQ,WAAa,KAChCI,EAAGV,IAAQM,QAAQ,WAAa,KAChCK,EAAGX,IAAQM,QAAQ,WAAa,KAChCM,EAAGZ,IAAQM,QAAQ,WAAa,KAChCO,EAAGb,IAAQM,QAAQ,WAAa,KAChCQ,EAAGd,IAAQM,QAAQ,WAAa,KAChCS,GAAIf,IAAQM,QAAQ,YAAc,KAClCU,GAAIhB,IAAQM,QAAQ,YAAc,KAClCW,GAAIjB,IAAQM,QAAQ,YAAc,KAClCY,GAAIlB,IAAQM,QAAQ,YAAc,KAClCa,GAAInB,IAAQM,QAAQ,YAAc,KAClCc,GAAIpB,IAAQM,QAAQ,YAAc,KAClCe,GAAIrB,IAAQM,QAAQ,YAAc,KAClCgB,GAAItB,IAAQM,QAAQ,YAAc,KAClCiB,GAAIvB,IAAQM,QAAQ,YAAc,KAClCkB,GAAIxB,IAAQM,QAAQ,YAAc,KAClCmB,GAAIzB,IAAQM,QAAQ,YAAc,KAClCoB,GAAI1B,IAAQM,QAAQ,YAAc,KAClCqB,GAAI3B,IAAQM,QAAQ,YAAc,KAClCsB,GAAI5B,IAAQM,QAAQ,YAAc,KAClCuB,GAAI7B,IAAQM,QAAQ,YAAc,KAClCwB,GAAI9B,IAAQM,QAAQ,YAAc,KAClCyB,GAAI/B,IAAQM,QAAQ,YAAc,KAClC0B,GAAIhC,IAAQM,QAAQ,YAAc,KAClC2B,GAAIjC,IAAQM,QAAQ,YAAc,KAClC4B,GAAIlC,IAAQM,QAAQ,YAAc,KAClC6B,GAAInC,IAAQM,QAAQ,YAAc,KAClC8B,GAAIpC,IAAQM,QAAQ,YAAc,MAjCnB,E,gEAsCjB5E,QAAQC,IAAIqE,IAAQM,QAAQ,c,+BAY5B,OACE,yBAAKnD,UAAU,OACb,4BAAQA,UAAU,cAChB,yBAAKkF,IAAKC,IAAMnF,UAAU,WAAWoF,IAAI,SACzC,yBAAKlF,GAAG,sBACN,kBAAC,EAAD,CAAUgC,KAAMzD,KAAKd,MAAO0H,MAAM,WAEpC,wBAAInF,GAAG,aAAP,UACS,0BAAMF,UAAU,cAAhB,UAET,yBAAKE,GAAG,mBACN,kBAAC,EAAD,CAAOD,SAAUxB,KAAKkE,qB,GA9DhBpC,aCAE+E,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEF3G,SAAS4G,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL/H,QAAQ+H,MAAMA,EAAMC,c","file":"static/js/main.516dffe1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from \"react\";\nimport moment from \"moment\";\n\n//adapted/updated from SitePoint on Youtube\n\nclass Timer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      seconds: 0,\n      start: false,\n    };\n    this.handleStart = this.handleStart.bind(this);\n    this.handleStop = this.handleStop.bind(this);\n    this.handleReset = this.handleReset.bind(this);\n    this.handleSave = this.handleSave.bind(this);\n  }\n\n  componentDidMount() {\n    console.log(\"mounted\");\n  }\n\n  getSeconds() {\n    return (\"0\" + (this.state.seconds % 60)).slice(-2);\n  }\n\n  getMinutes() {\n    return Math.floor(this.state.seconds / 60);\n  }\n\n  handleStart() {\n    this.incrementer = setInterval(() => {\n      this.setState({\n        seconds: this.state.seconds + 1,\n      });\n    }, 1000);\n    this.toggle();\n  }\n\n  toggle() {\n    let startButton = document.querySelector(\"#start\");\n    let stopButton = document.querySelector(\"#stop\");\n\n    if (!this.state.start) {\n      startButton.style.display = \"none\";\n      stopButton.style.display = \"\";\n      this.setState({\n        start: true,\n      });\n    } else {\n      startButton.style.display = \"\";\n      stopButton.style.display = \"none\";\n      this.setState({\n        start: false,\n      });\n    }\n  }\n\n  handleStop() {\n    clearInterval(this.incrementer);\n    let resetButton = document.querySelector(\"#reset\");\n    let saveButton = document.querySelector(\"#save\");\n    resetButton.style.display = \"\";\n    saveButton.style.display = \"\";\n    this.toggle();\n  }\n\n  handleReset() {\n    let resetButton = document.querySelector(\"#reset\");\n    let saveButton = document.querySelector(\"#save\");\n\n    resetButton.style.display = \"none\";\n    saveButton.style.display = \"none\";\n\n    this.setState({\n      seconds: 0,\n      start: false,\n    });\n  }\n\n  currentDay = () => {\n    return this.state.dateContext.format(\"D\");\n  };\n\n  daysInMonth = () => {\n    let dateContext = moment();\n    return dateContext.daysInMonth();\n  };\n\n  handleSave() {\n    let totalDays = this.daysInMonth();\n    console.log(totalDays);\n    let currentDayElem = document.querySelector(\".day.current-day\");\n    let index = currentDayElem.firstChild.innerHTML;\n    this.handleReset();\n    //Variable to set expiration of cookie upon end of month\n    let cookieExp = totalDays - index;\n\n    if (this.state.seconds <= 360) {\n      currentDayElem.className = \"excellent\";\n      this.props.setClass(\"excellent\", index, cookieExp);\n    } else if (this.state.seconds <= 480) {\n      currentDayElem.className = \"great\";\n      this.props.setClass(\"great\", index, cookieExp);\n    } else if (this.state.seconds <= 600) {\n      currentDayElem.className = \"good\";\n      this.props.setClass(\"good\", index, cookieExp);\n    } else {\n      currentDayElem.className = \"needs-work\";\n      this.props.setClass(\"needs-work\", index, cookieExp);\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <h1 id=\"clock\">\n          {this.getMinutes()}:{this.getSeconds()}\n        </h1>\n        <button id=\"start\" type=\"button\" onClick={this.handleStart}>\n          <h2>Start</h2>\n        </button>\n        <button\n          id=\"stop\"\n          style={{ display: \"none\" }}\n          type=\"button\"\n          onClick={this.handleStop}\n        >\n          <h2>Stop</h2>\n        </button>\n        <button\n          id=\"reset\"\n          style={{ display: \"none\" }}\n          type=\"button\"\n          onClick={this.handleReset}\n        >\n          <h2>Reset</h2>\n        </button>\n        <button\n          id=\"save\"\n          style={{ display: \"none\" }}\n          type=\"button\"\n          onClick={this.handleSave}\n        >\n          <h2>Save Data</h2>\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Timer;\n","import React, { Component } from \"react\";\nimport moment from \"moment\";\nimport \"./calendar.css\";\n\nclass Calendar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dateContext: moment(),\n      today: moment(),\n      showMonthPopup: false,\n      showYearPopup: false,\n      monthName: \"\",\n    };\n  }\n\n  weekdays = moment.weekdays(); //Sunday, Monday, etc.\n  weekdaysShort = moment.weekdaysShort(); // Sun, Mon, Tue, etc.\n  months = moment.months();\n\n  year = () => {\n    return this.state.dateContext.format(\"Y\");\n  };\n  month = () => {\n    return this.state.dateContext.format(\"MMMM\");\n  };\n  daysInMonth = () => {\n    return this.state.dateContext.daysInMonth();\n  };\n  currentDate = () => {\n    return this.state.dateContext.get(\"date\");\n  };\n  currentDay = () => {\n    return this.state.dateContext.format(\"D\");\n  };\n\n  firstDayOfMonth = () => {\n    let dateContext = this.state.dateContext;\n    let firstDay = moment(dateContext).startOf(\"month\").format(\"d\");\n    return firstDay;\n  };\n\n  monthName = () => {\n    let date = new Date();\n    var d = moment(date);\n    let month = d.month();\n    let months = [\n      \"January\",\n      \"February\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"August\",\n      \"September\",\n      \"October\",\n      \"November\",\n      \"December\",\n    ];\n\n    let whatMonth = months[month];\n    this.setState({\n      monthName: whatMonth,\n    });\n  };\n\n  componentDidMount() {\n    this.monthName();\n  }\n\n  render() {\n    // Map the weekday Sun, Mon, Tues\n    let weekdays = this.weekdaysShort.map((day) => {\n      return (\n        <td key={day} className=\"week-day\">\n          {day}\n        </td>\n      );\n    });\n\n    let blanks = [];\n    for (let i = 0; i < this.firstDayOfMonth(); i++) {\n      blanks.push(\n        <td key={i * 10} className=\"empty\">\n          {\"\"}\n        </td>\n      );\n    }\n\n    let daysInMonth = [];\n    for (let d = 1; d <= this.daysInMonth(); d++) {\n      let className =\n        d === parseInt(this.currentDay()) ? \"day current-day\" : `day ${d}`;\n      let spanName = d === parseInt(this.currentDay()) ? `day current-span` : d;\n\n      if (this.props.data[d] !== null) {\n        console.log(\"found cookie\");\n        daysInMonth.push(\n          <td key={d} className={this.props.data[d]}>\n            <span id={spanName}>{d}</span>\n          </td>\n        );\n      } else {\n        daysInMonth.push(\n          <td key={d} className={className}>\n            <span id={spanName}>{d}</span>\n          </td>\n        );\n      }\n    }\n\n    let totalDays = [...blanks, ...daysInMonth];\n    let rows = [];\n    let cells = [];\n\n    totalDays.forEach((row, i) => {\n      if (i % 7 !== 0) {\n        cells.push(row);\n      } else {\n        let insertRow = cells.slice();\n        rows.push(insertRow);\n        cells = [];\n        cells.push(row);\n      }\n      if (i === totalDays.length - 1) {\n        let insertRow = cells.slice();\n        rows.push(insertRow);\n      }\n    });\n\n    let trElements = rows.map((d, index) => {\n      return <tr key={index}>{d}</tr>;\n    });\n\n    return (\n      <div className=\"calendar-container\">\n        <h2 className=\"month-name\">{this.state.monthName}</h2>\n        <table className=\"calendar\">\n          <thead>\n            <tr className=\"calendar-head\"></tr>\n          </thead>\n          <tbody>\n            <tr>{weekdays}</tr>\n            {trElements}\n          </tbody>\n        </table>\n        <div id=\"legend-container\">\n          <div className=\"legend-color one\">\n            <p id=\"excellent\"> &lt; 6 min </p>\n          </div>\n          <div className=\"legend-color two\">\n            <p id=\"great\"> &lt; 8 min </p>\n          </div>\n          <div className=\"legend-color three\">\n            <p id=\"good\"> &lt; 10 min </p>\n          </div>\n          <div className=\"legend-color four\">\n            <p id=\"needs-work\"> &gt; 10 min </p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Calendar;\n","import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\n// Dependencies\nimport Cookies from \"js-cookie\";\n\n// Components\n\nimport Timer from \"./components/Timer\";\nimport Calendar from \"./components/Calendar/Calendar\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      1: Cookies.getJSON(\"index1\") || null,\n      2: Cookies.getJSON(\"index2\") || null,\n      3: Cookies.getJSON(\"index3\") || null,\n      4: Cookies.getJSON(\"index4\") || null,\n      5: Cookies.getJSON(\"index5\") || null,\n      6: Cookies.getJSON(\"index6\") || null,\n      7: Cookies.getJSON(\"index7\") || null,\n      8: Cookies.getJSON(\"index8\") || null,\n      9: Cookies.getJSON(\"index9\") || null,\n      10: Cookies.getJSON(\"index10\") || null,\n      11: Cookies.getJSON(\"index11\") || null,\n      12: Cookies.getJSON(\"index12\") || null,\n      13: Cookies.getJSON(\"index13\") || null,\n      14: Cookies.getJSON(\"index14\") || null,\n      15: Cookies.getJSON(\"index15\") || null,\n      16: Cookies.getJSON(\"index16\") || null,\n      17: Cookies.getJSON(\"index17\") || null,\n      18: Cookies.getJSON(\"index18\") || null,\n      19: Cookies.getJSON(\"index19\") || null,\n      20: Cookies.getJSON(\"index20\") || null,\n      21: Cookies.getJSON(\"index21\") || null,\n      22: Cookies.getJSON(\"index22\") || null,\n      23: Cookies.getJSON(\"index23\") || null,\n      24: Cookies.getJSON(\"index24\") || null,\n      25: Cookies.getJSON(\"index25\") || null,\n      26: Cookies.getJSON(\"index26\") || null,\n      27: Cookies.getJSON(\"index27\") || null,\n      28: Cookies.getJSON(\"index28\") || null,\n      29: Cookies.getJSON(\"index29\") || null,\n      30: Cookies.getJSON(\"index30\") || null,\n      31: Cookies.getJSON(\"index31\") || null,\n    };\n  }\n\n  componentDidMount() {\n    console.log(Cookies.getJSON(\"index22\"));\n  }\n\n  handleState = (className, index, exp) => {\n    console.log(index);\n    this.setState({\n      [index]: className,\n    });\n    Cookies.set(`index${index}`, JSON.stringify(className), { expires: exp });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <div id=\"calendar-container\">\n            <Calendar data={this.state} width=\"400px\" />\n          </div>\n          <h1 id=\"app-title\">\n            Shower <span className=\"span-color\">Timer</span>\n          </h1>\n          <div id=\"timer-container\">\n            <Timer setClass={this.handleState} />\n          </div>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}